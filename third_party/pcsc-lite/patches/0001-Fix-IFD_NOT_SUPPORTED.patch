From 7730f6c54d7fb6a910d291e2d48c92d2a5abf688 Mon Sep 17 00:00:00 2001
From: Ludovic Rousseau <ludovic.rousseau@free.fr>
Date: Thu, 17 Jun 2021 10:48:40 +0200
Subject: [PATCH] SetProtocol: Handle IFD_NOT_SUPPORTED from the driver

If the driver returns IFD_NOT_SUPPORTED from the function
IFDHSetProtocolParameters() it indicates the "command" is not supported.
It is different from IFD_PROTOCOL_NOT_SUPPORTED that indicates the
"prorocol" is not supported.

The problem was with a ACR38U CCID and a memory card. The
SetParameters() fails but the card can still be used using the default
protocol.

The behaviour is identical to what we had before the commit
5d58577093f56dbcfbf754940f885ed8fcdba206.

Thanks to Godfrey Chung for the bug report
"pcsc-lite 1.9.1: memory card connection failed #103"
https://github.com/LudovicRousseau/PCSC/issues/103
---
 src/prothandler.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/src/prothandler.c b/src/prothandler.c
index 1e21264..56c00ea 100644
--- a/src/prothandler.c
+++ b/src/prothandler.c
@@ -114,9 +114,9 @@ DWORD PHSetProtocol(struct ReaderContext * rContext,
 			protocol = ucChosen;
 			break;
 
-		case IFD_NOT_SUPPORTED:
 		case IFD_PROTOCOL_NOT_SUPPORTED:
 		case IFD_ERROR_NOT_SUPPORTED:
+			/* protocol not supported */
 			if (protocol != dwPreferred)
 			{
 				Log3(PCSC_LOG_INFO,
@@ -131,6 +131,12 @@ DWORD PHSetProtocol(struct ReaderContext * rContext,
 			}
 			break;
 
+		case IFD_NOT_SUPPORTED:
+			/* command not supported */
+			Log3(PCSC_LOG_INFO, "Set PTS failed (%ld). Using T=%d", rv,
+				(SCARD_PROTOCOL_T0 == protocol) ? 0 : 1);
+			break;
+
 		default:
 			Log2(PCSC_LOG_INFO, "Set PTS failed (%ld)", rv);
 
