From 210efa525f50e99821a10d91b8c861825e470d8b Mon Sep 17 00:00:00 2001
From: Maksim Ivanov <emaxx@google.com>
Date: Sun, 29 May 2022 16:31:19 +0200
Subject: [PATCH] Fix leak of fullName on shutdown (#134)

Free _readerTracker::fullName strings on shutdown in hotplug_libusb.
---
 src/hotplug_libusb.c | 20 ++++++++++++++++----
 1 file changed, 16 insertions(+), 4 deletions(-)

diff --git a/src/hotplug_libusb.c b/src/hotplug_libusb.c
index 3c50f526..e8af90a4 100644
--- a/src/hotplug_libusb.c
+++ b/src/hotplug_libusb.c
@@ -129,6 +129,7 @@ static LONG HPAddHotPluggable(struct libusb_device *dev,
 	struct _driverTracker *driver,
 	struct _driverTracker *classdriver);
 static LONG HPRemoveHotPluggable(int reader_index);
+static void HPCleanupHotPluggable(int reader_index);
 
 static LONG HPReadBundleValues(void)
 {
@@ -451,6 +452,12 @@ static void HPRescanUsbBus(void)
 	{
 		int retval;
 
+		for (i=0; i<PCSCLITE_MAX_READERS_CONTEXTS; i++)
+		{
+			if (readerTracker[i].fullName != NULL)
+				HPCleanupHotPluggable(i);
+		}
+
 		for (i=0; i<driverSize; i++)
 		{
 			/* free strings allocated by strdup() */
@@ -771,16 +778,21 @@ static LONG HPRemoveHotPluggable(int reader_index)
 
 	RFRemoveReader(readerTracker[reader_index].fullName,
 		PCSCLITE_HP_BASE_PORT + reader_index, REMOVE_READER_FLAG_REMOVED);
-	free(readerTracker[reader_index].fullName);
-	readerTracker[reader_index].status = READER_ABSENT;
-	readerTracker[reader_index].bus_device[0] = '\0';
-	readerTracker[reader_index].fullName = NULL;
+	HPCleanupHotPluggable(reader_index);
 
 	pthread_mutex_unlock(&usbNotifierMutex);
 
 	return 1;
 }	/* End of function */
 
+static void HPCleanupHotPluggable(int reader_index)
+{
+	free(readerTracker[reader_index].fullName);
+	readerTracker[reader_index].status = READER_ABSENT;
+	readerTracker[reader_index].bus_device[0] = '\0';
+	readerTracker[reader_index].fullName = NULL;
+}	/* End of function */
+
 /**
  * Sets up callbacks for device hotplug events.
  */
