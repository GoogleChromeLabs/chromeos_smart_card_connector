diff --git a/configure b/configure
--- a/configure
+++ b/configure
@@ -4761,7 +4761,13 @@ if ! disabled network; then
 fi
 
 check_builtin atomic_cas_ptr atomic.h "void **ptr; void *oldval, *newval; atomic_cas_ptr(ptr, oldval, newval)"
-check_builtin atomic_compare_exchange "" "int *ptr, *oldval; int newval; __atomic_compare_exchange_n(ptr, oldval, newval, 0, __ATOMIC_SEQ_CST, __ATOMIC_SEQ_CST)"
+# Check for both __atomic_compare_exchange_n and __atomic_add_fetch since
+# HAVE_ATOMIC_COMPARE_EXCHANGE should only be defined if both are present.
+# Currently PNaCl supports __atomic_compare_exchange_n but not
+# __atomic_add_fetch so testing for __atomic_compare_exchange_n was not
+# enough.
+# https://code.google.com/p/nativeclient/issues/detail?id=3941
+check_builtin atomic_compare_exchange "" "int *ptr, *oldval; int newval; __atomic_compare_exchange_n(ptr, oldval, newval, 0, __ATOMIC_SEQ_CST, __ATOMIC_SEQ_CST); __atomic_add_fetch(ptr, 1, __ATOMIC_SEQ_CST)"
 check_builtin machine_rw_barrier mbarrier.h "__machine_rw_barrier()"
 check_builtin MemoryBarrier windows.h "MemoryBarrier()"
 check_builtin sarestart signal.h "SA_RESTART"
diff --git a/ffmpeg.c b/ffmpeg.c
--- a/ffmpeg.c
+++ b/ffmpeg.c
@@ -3937,7 +3937,7 @@ static int transcode(void)
 
 static int64_t getutime(void)
 {
-#if HAVE_GETRUSAGE
+#if HAVE_GETRUSAGE && !defined(__native_client__)
     struct rusage rusage;
 
     getrusage(RUSAGE_SELF, &rusage);
@@ -3955,7 +3955,7 @@ static int64_t getutime(void)
 
 static int64_t getmaxrss(void)
 {
-#if HAVE_GETRUSAGE && HAVE_STRUCT_RUSAGE_RU_MAXRSS
+#if HAVE_GETRUSAGE && HAVE_STRUCT_RUSAGE_RU_MAXRSS && !defined(__native_client__)
     struct rusage rusage;
     getrusage(RUSAGE_SELF, &rusage);
     return (int64_t)rusage.ru_maxrss * 1024;
