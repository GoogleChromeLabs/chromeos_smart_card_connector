diff --git a/configure b/configure
--- a/configure
+++ b/configure
@@ -20734,7 +20734,7 @@ if test "${ac_cv_lib_X11_XOpenDisplay+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
   ac_check_lib_save_LIBS=$LIBS
-LIBS="-lX11  $LIBS"
+LIBS="-lX11 -lxcb -lXau $LIBS"
 cat >conftest.$ac_ext <<_ACEOF
 /* confdefs.h.  */
 _ACEOF
diff --git a/lib/Application.cc b/lib/Application.cc
--- a/lib/Application.cc
+++ b/lib/Application.cc
@@ -36,7 +36,7 @@
 #endif // SHAPE
 
 #include <sys/types.h>
-#if defined(__EMX__)
+#if defined(__EMX__) || defined(__native_client__)
 #  include <sys/select.h>
 #endif
 #include <sys/time.h>
diff --git a/lib/Display.cc b/lib/Display.cc
--- a/lib/Display.cc
+++ b/lib/Display.cc
@@ -32,6 +32,9 @@
 #include <fcntl.h>
 #include <stdio.h>
 
+#include <unistd.h>
+#include <stdlib.h>
+
 
 namespace bt {
 
diff --git a/lib/Image.cc b/lib/Image.cc
--- a/lib/Image.cc
+++ b/lib/Image.cc
@@ -44,6 +44,7 @@
 #include <math.h>
 #include <stdio.h>
 #include <stdlib.h>
+#include <string.h>
 
 // #define COLORTABLE_DEBUG
 // #define MITSHM_DEBUG
diff --git a/lib/Menu.cc b/lib/Menu.cc
--- a/lib/Menu.cc
+++ b/lib/Menu.cc
@@ -35,6 +35,7 @@
 
 #include <stdio.h>
 #include <assert.h>
+#include <stdlib.h>
 
 
 bt::MenuStyle **bt::MenuStyle::styles = 0;
@@ -363,7 +364,7 @@ unsigned int bt::Menu::insertItem(const MenuItem &item,
   } else {
     index = std::min(static_cast<size_t>(index), _items.size());
     it = _items.begin();
-    std::advance<ItemList::iterator, signed>(it, index);
+    std::advance(it, index);
   }
 
   it = _items.insert(it, item);
@@ -514,7 +515,7 @@ void bt::Menu::removeItem(unsigned int id) {
 
 void bt::Menu::removeIndex(unsigned int index) {
   ItemList::iterator it = _items.begin();
-  std::advance<ItemList::iterator, signed>(it, index);
+  std::advance(it, index);
   if (it == _items.end())
     return; // item not found
   removeItemByIterator(it);
@@ -1035,7 +1036,7 @@ void bt::Menu::keyPressEvent(const XKeyEvent * const event) {
     const ItemList::const_iterator &end = _items.end();
     ItemList::const_iterator anchor = _items.begin();
     if (_active_index != ~0u) {
-      std::advance<ItemList::const_iterator, signed>(anchor, _active_index);
+      std::advance(anchor, _active_index);
 
       // go one paste the current active index
       if (anchor != end && !anchor->separator)
@@ -1055,8 +1056,7 @@ void bt::Menu::keyPressEvent(const XKeyEvent * const event) {
     ItemList::const_reverse_iterator anchor = _items.rbegin();
     const ItemList::const_reverse_iterator &end = _items.rend();
     if (_active_index != ~0u) {
-      std::advance<ItemList::const_reverse_iterator, signed>
-        (anchor, _items.size() - _active_index - 1);
+      std::advance(anchor, _items.size() - _active_index - 1);
 
       // go one item past the current active index
       if (anchor != end && !anchor->separator)
diff --git a/lib/Pen.cc b/lib/Pen.cc
--- a/lib/Pen.cc
+++ b/lib/Pen.cc
@@ -36,6 +36,7 @@
 
 #include <assert.h>
 #include <stdio.h>
+#include <stdlib.h>
 
 // #define PENCACHE_DEBUG
 
diff --git a/lib/Resource.cc b/lib/Resource.cc
--- a/lib/Resource.cc
+++ b/lib/Resource.cc
@@ -29,6 +29,7 @@
 #include <X11/Xresource.h>
 
 #include <stdio.h>
+#include <strings.h>
 
 
 bt::Resource::Resource(void)
diff --git a/lib/Texture.cc b/lib/Texture.cc
--- a/lib/Texture.cc
+++ b/lib/Texture.cc
@@ -31,6 +31,7 @@
 
 #include <X11/Xlib.h>
 #include <ctype.h>
+#include <stdlib.h>
 
 
 void bt::Texture::setColor1(const bt::Color &new_color) {
diff --git a/lib/Util.cc b/lib/Util.cc
--- a/lib/Util.cc
+++ b/lib/Util.cc
@@ -86,10 +86,12 @@ bool bt::mkdirhier(const std::string &path, int mode)
     before returning.
   */
   // save umask
+#if !defined(__native_client__) || !defined(_NEWLIB_VERSION)
   mode_t save_umask = umask(0);
   mode_t tmp_umask = save_umask & ~(S_IWUSR | S_IXUSR);
   bool umask_restored = false;
   (void) umask(tmp_umask);
+#endif
 
   bool success = true;
   const std::string::const_iterator begin = path.begin();
@@ -101,8 +103,10 @@ bool bt::mkdirhier(const std::string &path, int mode)
     }
     it = std::find(it + 1, end, '/');
     if (it == end || (it + 1) == end) {
+#if !defined(__native_client__) || !defined(_NEWLIB_VERSION)
       (void) umask(save_umask);
       umask_restored = true;
+#endif
       // make sure we use the right mode to mkdir(2)
       it = end;
     }
@@ -123,9 +127,11 @@ bool bt::mkdirhier(const std::string &path, int mode)
     }
   }
 
+#if !defined(__native_client__) || !defined(_NEWLIB_VERSION)
   // restore umask
   if (!umask_restored)
     (void) umask(save_umask);
+#endif
 
   return success;
 }
diff --git a/lib/Util.hh b/lib/Util.hh
--- a/lib/Util.hh
+++ b/lib/Util.hh
@@ -25,6 +25,8 @@
 #ifndef __Util_hh
 #define __Util_hh
 
+#include <X11/Xlib.h>
+#include <X11/Xutil.h>
 #include <limits.h>
 #include <string>
 
@@ -94,10 +96,10 @@ namespace bt {
 
   std::string tolower(const std::string &string);
 
-#ifdef _XUTIL_H_
+//#ifdef _XUTIL_H_
   std::string textPropertyToString(::Display *display,
                                    ::XTextProperty& text_prop);
-#endif
+//#endif
 
 } // namespace bt
 
diff --git a/lib/XDG.cc b/lib/XDG.cc
--- a/lib/XDG.cc
+++ b/lib/XDG.cc
@@ -26,6 +26,7 @@
 #include "XDG.hh"
 
 #include <stdlib.h>
+#include <algorithm>
 
 
 // make sure directory names end with a slash
diff --git a/src/BlackboxResource.cc b/src/BlackboxResource.cc
--- a/src/BlackboxResource.cc
+++ b/src/BlackboxResource.cc
@@ -33,6 +33,7 @@
 #include <X11/Xutil.h>
 #include <X11/cursorfont.h>
 
+#include <strings.h>
 
 BlackboxResource::BlackboxResource(const std::string& rc): rc_file(rc) {
   screen_resources = 0;
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -302,7 +302,7 @@ clean-binPROGRAMS:
 	done
 blackbox$(EXEEXT): $(blackbox_OBJECTS) $(blackbox_DEPENDENCIES) 
 	@rm -f blackbox$(EXEEXT)
-	$(CXXLINK) $(blackbox_LDFLAGS) $(blackbox_OBJECTS) $(blackbox_LDADD) $(LIBS)
+	$(CXXLINK) $(blackbox_LDFLAGS) $(blackbox_OBJECTS) $(blackbox_LDADD) $(LIBS) $(EXTRA_LIBS)
 
 mostlyclean-compile:
 	-rm -f *.$(OBJEXT)
diff --git a/src/Screen.cc b/src/Screen.cc
--- a/src/Screen.cc
+++ b/src/Screen.cc
@@ -47,6 +47,7 @@
 #include <assert.h>
 #include <ctype.h>
 #include <dirent.h>
+#include <string.h>
 
 
 static bool running = true;
diff --git a/src/ScreenResource.cc b/src/ScreenResource.cc
--- a/src/ScreenResource.cc
+++ b/src/ScreenResource.cc
@@ -32,6 +32,7 @@
 #include <Resource.hh>
 
 #include <assert.h>
+#include <strings.h>
 
 
 static const int iconify_width  = 9;
diff --git a/src/Toolbar.cc b/src/Toolbar.cc
--- a/src/Toolbar.cc
+++ b/src/Toolbar.cc
@@ -39,12 +39,15 @@
 #include <sys/time.h>
 #include <assert.h>
 
+#include <time.h>
+#include <algorithm>
+
 
 long nextTimeout(int resolution)
 {
   timeval now;
   gettimeofday(&now, 0);
-  return (std::max(1000l, ((((resolution - (now.tv_sec % resolution)) * 1000l))
+  return (std::max((time_t)1000l, ((((resolution - (now.tv_sec % resolution)) * 1000l))
                            - (now.tv_usec / 1000l))));
 }
 
diff --git a/src/Window.cc b/src/Window.cc
--- a/src/Window.cc
+++ b/src/Window.cc
@@ -43,6 +43,7 @@
 #endif
 
 #include <assert.h>
+#include <stdlib.h>
 
 /*
   sometimes C++ is a pain in the ass... it gives us stuff like the
@@ -3519,11 +3520,11 @@ void BlackboxWindow::motionNotifyEvent(const XMotionEvent * const event) {
     else
       continueMove(event->x_root, event->y_root);
   } else if (hasWindowFunction(WindowFunctionResize)
-             && (event->state & Button1Mask
+             && ((event->state & Button1Mask)
                  && (event->window == frame.right_grip
                      || event->window == frame.left_grip))
-             || (event->state & Button3Mask
-                 && event->state & Mod1Mask
+             || ((event->state & Button3Mask)
+                 && (event->state & Mod1Mask)
                  && event->window == frame.window)) {
     if (!client.state.resizing)
       startResize(event->window);
diff --git a/src/blackbox.cc b/src/blackbox.cc
--- a/src/blackbox.cc
+++ b/src/blackbox.cc
@@ -37,6 +37,7 @@
 #include <assert.h>
 #include <signal.h>
 #include <unistd.h>
+#include <stdlib.h>
 
 // #define FOCUS_DEBUG
 #ifdef FOCUS_DEBUG
diff --git a/src/main.cc b/src/main.cc
--- a/src/main.cc
+++ b/src/main.cc
@@ -35,6 +35,8 @@
 #include "../version.h"
 
 #include <stdio.h>
+#include <string.h>
+#include <stdlib.h>
 
 
 static void showHelp(int exitval) {
@@ -72,6 +74,11 @@ static void showHelp(int exitval) {
   ::exit(exitval);
 }
 
+#if defined(__native_client__)
+#include "nacl_main.h"
+#define main nacl_main
+#endif
+
 int main(int argc, char **argv) {
   const char *dpy_name = 0;
   std::string rc_file;
diff --git a/util/Makefile.in b/util/Makefile.in
--- a/util/Makefile.in
+++ b/util/Makefile.in
@@ -282,10 +282,10 @@ clean-binPROGRAMS:
 	done
 bsetroot$(EXEEXT): $(bsetroot_OBJECTS) $(bsetroot_DEPENDENCIES) 
 	@rm -f bsetroot$(EXEEXT)
-	$(CXXLINK) $(bsetroot_LDFLAGS) $(bsetroot_OBJECTS) $(bsetroot_LDADD) $(LIBS)
+	$(CXXLINK) $(bsetroot_LDFLAGS) $(bsetroot_OBJECTS) $(bsetroot_LDADD) $(LIBS) $(EXTRA_LIBS)
 bstyleconvert$(EXEEXT): $(bstyleconvert_OBJECTS) $(bstyleconvert_DEPENDENCIES) 
 	@rm -f bstyleconvert$(EXEEXT)
-	$(CXXLINK) $(bstyleconvert_LDFLAGS) $(bstyleconvert_OBJECTS) $(bstyleconvert_LDADD) $(LIBS)
+	$(CXXLINK) $(bstyleconvert_LDFLAGS) $(bstyleconvert_OBJECTS) $(bstyleconvert_LDADD) $(LIBS) $(EXTRA_LIBS)
 install-binSCRIPTS: $(bin_SCRIPTS)
 	@$(NORMAL_INSTALL)
 	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
diff --git a/util/bsetroot.cc b/util/bsetroot.cc
--- a/util/bsetroot.cc
+++ b/util/bsetroot.cc
@@ -31,6 +31,8 @@
 
 #include <X11/Xatom.h>
 #include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
 
 
 // ignore all X errors
@@ -339,6 +341,11 @@ void bsetroot::usage(int exit_code) {
   exit(exit_code);
 }
 
+#if defined(__native_client__)
+# include "nacl_main.h"
+# define main nacl_main
+#endif
+
 int main(int argc, char **argv) {
   char *display_name = 0;
   bool multi_head = False;
diff --git a/util/bstyleconvert.cc b/util/bstyleconvert.cc
--- a/util/bstyleconvert.cc
+++ b/util/bstyleconvert.cc
@@ -710,6 +710,10 @@ void writeStyle(const std::string &filename, const NewStyle &style)
 }
 
 
+#if defined(__native_client__)
+# include "nacl_main.h"
+# define main nacl_main
+#endif
 
 int main(int argc, char* argv[]) {
   for (int i = 1; i < argc; ++i) {
