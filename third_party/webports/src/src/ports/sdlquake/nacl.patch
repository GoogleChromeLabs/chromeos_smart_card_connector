diff --git a/cd_nacl.c b/cd_nacl.c
new file mode 100644
--- /dev/null
+++ b/cd_nacl.c
@@ -0,0 +1,29 @@
+/*
+  The NaCl version of Quake does not support CDAudio, so just provide stubs
+*/
+
+
+#include "quakedef.h"
+
+void CDAudio_Stop() {
+}
+
+void CDAudio_Pause() {
+}
+
+void CDAudio_Resume() {
+}
+
+void CDAudio_Update() {
+}
+
+void CDAudio_Play(byte track, qboolean looping) {
+}
+
+int CDAudio_Init() {
+  return -1;
+}
+
+void CDAudio_Shutdown() {
+}
+
diff --git a/d_ifacea.h b/d_ifacea.h
--- a/d_ifacea.h
+++ b/d_ifacea.h
@@ -38,7 +38,7 @@ Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 #define	CYCLE	128
 
 // !!! if this is changed, it must be changed in r_shared.h too !!!
-#define	MAXHEIGHT	1024
+#define	MAXHEIGHT	2048
 
 // !!! if this is changed, it must be changed in quakedef.h too !!!
 #define CACHE_SIZE	32		// used to align key data structures
diff --git a/net_dgrm.c b/net_dgrm.c
--- a/net_dgrm.c
+++ b/net_dgrm.c
@@ -19,6 +19,11 @@ Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
 // net_dgrm.c
 
+#include "quakedef.h"
+
+//#define HAVE_NET_DGRM
+#if defined(HAVE_NET_DGRM)
+
 // This is enables a simple IP banning mechanism
 #define BAN_TEST
 
@@ -52,7 +57,6 @@ unsigned long inet_addr(const char *cp);
 #endif
 #endif	// BAN_TEST
 
-#include "quakedef.h"
 #include "net_dgrm.h"
 
 // these two macros are to make the code more readable
@@ -1388,3 +1392,53 @@ qsocket_t *Datagram_Connect (char *host)
 				break;
 	return ret;
 }
+#else
+
+int Datagram_Init (void) {
+  return -1;
+}
+
+void Datagram_Listen (qboolean state) {
+}
+
+void Datagram_SearchForHosts (qboolean xmit) {
+}
+
+qsocket_t *Datagram_Connect (char *host) {
+  return NULL;
+}
+
+qsocket_t *Datagram_CheckNewConnections (void) {
+  return NULL;
+}
+
+int	Datagram_GetMessage (qsocket_t *sock) {
+  return -1;
+}
+
+int Datagram_SendMessage (qsocket_t *sock, sizebuf_t *data) {
+  return -1;
+}
+
+int Datagram_SendUnreliableMessage (qsocket_t *sock, sizebuf_t *data) {
+  return -1;
+}
+
+qboolean Datagram_CanSendMessage (qsocket_t *sock) {
+  return 0;
+}
+
+qboolean Datagram_CanSendUnreliableMessage (qsocket_t *sock)
+{
+	return false;
+}
+
+void Datagram_Close (qsocket_t *sock) {
+}
+
+void Datagram_Shutdown (void) {
+}
+
+
+#endif
+
diff --git a/net_udp.c b/net_udp.c
--- a/net_udp.c
+++ b/net_udp.c
@@ -19,9 +19,13 @@ Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
 // net_udp.c
 
-#include "quakedef.h"
+//#define HAVE_NET_UDP
 
+#include "quakedef.h"
 #include <sys/types.h>
+
+#if defined(HAVE_NET_UDP)
+
 #include <sys/socket.h>
 #include <netinet/in.h>
 #include <netdb.h>
@@ -413,3 +417,81 @@ int UDP_SetSocketPort (struct qsockaddr *addr, int port)
 }
 
 //=============================================================================
+
+#else
+
+int UDP_Init (void) {
+  return -1;
+}
+
+void UDP_Shutdown (void) {
+}
+
+void UDP_Listen (qboolean state) {
+}
+
+int UDP_OpenSocket (int port) {
+  return -1;
+}
+
+int UDP_CloseSocket (int socket) {
+  return -1;
+}
+
+int UDP_Connect (int socket, struct qsockaddr *addr) {
+  return 0;
+}
+
+int UDP_CheckNewConnections (void) {
+  return -1;
+}
+
+int UDP_Read (int socket, byte *buf, int len, struct qsockaddr *addr) {
+  return -1;
+}
+
+int UDP_MakeSocketBroadcastCapable (int socket) {
+  return -1;
+}
+
+int UDP_Broadcast (int socket, byte *buf, int len) {
+  return -1;
+}
+
+int UDP_Write (int socket, byte *buf, int len, struct qsockaddr *addr) {
+  return -1;
+}
+
+char *UDP_AddrToString (struct qsockaddr *addr) {
+  return NULL;
+}
+
+int UDP_StringToAddr (char *string, struct qsockaddr *addr) {
+  return -1;
+}
+
+int UDP_GetSocketAddr (int socket, struct qsockaddr *addr) {
+  return -1;
+}
+
+int UDP_GetNameFromAddr (struct qsockaddr *addr, char *name) {
+  return -1;
+}
+
+int UDP_GetAddrFromName(char *name, struct qsockaddr *addr) {
+  return -1;
+}
+
+int UDP_AddrCompare (struct qsockaddr *addr1, struct qsockaddr *addr2) {
+  return -1;
+}
+
+int UDP_GetSocketPort (struct qsockaddr *addr) {
+  return -1;
+}
+
+int UDP_SetSocketPort (struct qsockaddr *addr, int port) {
+  return 0;
+}
+
+#endif
diff --git a/r_shared.h b/r_shared.h
--- a/r_shared.h
+++ b/r_shared.h
@@ -30,8 +30,8 @@ Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 #define MAXWORKINGVERTS	(MAXVERTS+4)	// max points in an intermediate
 										//  polygon (while processing)
 // !!! if this is changed, it must be changed in d_ifacea.h too !!!
-#define	MAXHEIGHT		1024
-#define	MAXWIDTH		1280
+#define	MAXHEIGHT		2048
+#define	MAXWIDTH		4096
 #define MAXDIMENSION	((MAXHEIGHT > MAXWIDTH) ? MAXHEIGHT : MAXWIDTH)
 
 #define SIN_BUFFER_SIZE	(MAXDIMENSION+CYCLE)
diff --git a/sys_sdl.c b/sys_sdl.c
--- a/sys_sdl.c
+++ b/sys_sdl.c
@@ -11,7 +11,7 @@
 #include <string.h>
 #include <ctype.h>
 #include <errno.h>
-#ifndef __WIN32__
+#if !defined  __WIN32__ && !defined __native_client__
 #include <sys/ipc.h>
 #include <sys/shm.h>
 #include <sys/stat.h>
@@ -19,6 +19,8 @@
 #include <sys/mman.h>
 #endif
 
+#include "SDL.h"
+
 #include "quakedef.h"
 
 qboolean			isDedicated;
diff --git a/vid_sdl.c b/vid_sdl.c
--- a/vid_sdl.c
+++ b/vid_sdl.c
@@ -11,8 +11,8 @@ unsigned short  d_8to16table[256];
 //#define    BASEWIDTH    320
 //#define    BASEHEIGHT   200
 // Much better for high resolution displays
-#define    BASEWIDTH    (320*2)
-#define    BASEHEIGHT   (200*2)
+#define    BASEWIDTH    800
+#define    BASEHEIGHT   600
 
 int    VGA_width, VGA_height, VGA_rowbytes, VGA_bufferrowbytes = 0;
 byte    *VGA_pagebase;
@@ -56,7 +56,7 @@ void    VID_Init (unsigned char *palette)
     Uint32 flags;
 
     // Load the SDL library
-    if (SDL_Init(SDL_INIT_VIDEO|SDL_INIT_AUDIO|SDL_INIT_CDROM) < 0)
+    if (SDL_Init(SDL_INIT_VIDEO|SDL_INIT_AUDIO) < 0)
         Sys_Error("VID: Couldn't load SDL: %s", SDL_GetError());
 
     // Set up display mode (width and height)
