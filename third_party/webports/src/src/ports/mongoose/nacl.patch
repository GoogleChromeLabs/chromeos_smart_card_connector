diff --git a/Makefile b/Makefile
--- a/Makefile
+++ b/Makefile
@@ -17,7 +17,7 @@
 # -DUSE_LUA               - embed Lua in Mongoose (+100kb)
 
 PROG        = mongoose
-CFLAGS      = -std=c99 -O2 -W -Wall -pedantic -pthread
+CFLAGS      = -std=c99 -O2 -W -Wall -pedantic -pthread $(EXTRA_CFLAGS)
 
 # To build with Lua, download and unzip Lua 5.2.1 source code into the
 # mongoose directory, and then add $(LUA_SOURCES) to CFLAGS
@@ -81,8 +81,10 @@ CL   = $(MSVC)/bin/cl /MD /TC /nologo $(DBG) /W3 /GA /I$(MSVC)/include
 LINK = $(MSVC)/bin/link /incremental:no /libpath:$(MSVC)/lib /machine:IX86 \
        user32.lib shell32.lib comdlg32.lib ws2_32.lib advapi32.lib
 
+CCLD ?= $(CC)
+
 all:
-	@echo "make (linux|bsd|solaris|mac|windows|mingw|cygwin)"
+	@echo "make (linux|bsd|solaris|mac|windows|mingw|cygwin|nacl)"
 
 %.obj: %.c
 	$(CL) /c $(FLAGS) /Fo$@ $<
@@ -105,6 +107,9 @@ linux_lua: $(ALL_OBJECTS)
 linux:
 	$(CC) mongoose.c main.c -o $(PROG) -ldl $(CFLAGS)
 
+nacl:
+	$(CC) mongoose.c main.c -DNO_POPEN -DNO_CGI -o $(PROG) $(CFLAGS) $(LDFLAGS)
+
 mac: bsd
 bsd:
 	$(CC) mongoose.c main.c -o $(PROG) $(CFLAGS)
diff --git a/main.c b/main.c
--- a/main.c
+++ b/main.c
@@ -893,7 +893,25 @@ int main(int argc, char *argv[]) {
   return EXIT_SUCCESS;
 }
 #else
+
+#ifdef __native_client__
+#include <sys/mount.h>
+#define main nacl_main
+#endif
+
 int main(int argc, char *argv[]) {
+#ifdef __native_client__
+  chdir("/tmp");
+
+  struct stat buf;
+  if (stat("index.html", &buf) != 0) {
+    const char* index_html = "<h1>Mongoose is working!</h1>\n";
+    FILE* f = fopen("index.html", "w+");
+    fwrite(index_html, strlen(index_html), 1, f);
+    fclose(f);
+  }
+#endif
+
   init_server_name();
   start_mongoose(argc, argv);
   printf("%s started on port(s) %s with web root [%s]\n",
@@ -910,4 +928,5 @@ int main(int argc, char *argv[]) {
 
   return EXIT_SUCCESS;
 }
+
 #endif /* _WIN32 */
diff --git a/mongoose.c b/mongoose.c
--- a/mongoose.c
+++ b/mongoose.c
@@ -23,7 +23,7 @@
 #define _CRT_SECURE_NO_WARNINGS // Disable deprecation warning in VS2005
 #endif
 #else
-#ifdef __linux__
+#if defined(__linux__) || defined(__native_client__)
 #define _XOPEN_SOURCE 600     // For flockfile() on Linux
 #endif
 #define _LARGEFILE_SOURCE     // Enable 64-bit file offsets
