diff --git a/Xtranslcl.c b/Xtranslcl.c
--- a/Xtranslcl.c
+++ b/Xtranslcl.c
@@ -416,13 +416,17 @@ TRANS(PTSOpenClient)(XtransConnInfo ciptr, char *port)
      * wait for server to respond
      */
 
+#if !defined(__native_client__) || !defined(_NEWLIB_VERSION)
     savef = signal(SIGALRM, _dummy);
     alarm_time = alarm (30); /* CONNECT_TIMEOUT */
+#endif
 
     ret = read(fd, buf, 1);
 
+#if !defined(__native_client__) || !defined(_NEWLIB_VERSION)
     (void) alarm(alarm_time);
     (void) signal(SIGALRM, savef);
+#endif
 
     if (ret != 1) {
 	prmsg(1,
@@ -1036,13 +1040,17 @@ TRANS(SCOOpenClient)(XtransConnInfo ciptr, char *port)
     ctlbuf.buf = (caddr_t)&temp;
     fl = 0;
 
+#if !defined(__native_client__) || !defined(_NEWLIB_VERSION)
     savef = signal(SIGALRM, _dummy);
     alarm_time = alarm(10);
+#endif
 
     ret = getmsg(server, &ctlbuf, 0, &fl);
 
+#if !defined(__native_client__) || !defined(_NEWLIB_VERSION)
     (void) alarm(alarm_time);
     (void) signal(SIGALRM, savef);
+#endif
 
     if (ret < 0) {
 	prmsg(1,"SCOOpenClient: error from getmsg\n");
diff --git a/Xtranssock.c b/Xtranssock.c
--- a/Xtranssock.c
+++ b/Xtranssock.c
@@ -412,7 +412,8 @@ TRANS(SocketOpen) (int i, int type)
 
     if ((ciptr->fd = socket(Sockettrans2devtab[i].family, type,
 	Sockettrans2devtab[i].protocol)) < 0
-#ifndef WIN32
+/* TODO(bradnelson): Drop this if we decide to support this sysconf value for newlib. */
+#if !defined(WIN32) && !(defined(__native_client__) && defined(_NEWLIB_VERSION))
 #if (defined(X11_t) && !defined(USE_POLL)) || defined(FS_t) || defined(FONT_t)
        || ciptr->fd >= sysconf(_SC_OPEN_MAX)
 #endif
diff --git a/Xtransutil.c b/Xtransutil.c
--- a/Xtransutil.c
+++ b/Xtransutil.c
@@ -390,15 +390,19 @@ TRANS(GetPeerNetworkId) (XtransConnInfo ciptr)
 	 */
 
 	nameserver_timedout = 0;
+#if !defined(__native_client__) || !defined(_NEWLIB_VERSION)
 	signal (SIGALRM, nameserver_lost);
 	alarm (4);
+#endif
 	if (setjmp(env) == 0) {
 #endif
 	    hostp = _XGethostbyaddr (address, addresslen, family, hparams);
 #ifdef SIGALRM
 	}
+#if !defined(__native_client__) || !defined(_NEWLIB_VERSION)
 	alarm (0);
 #endif
+#endif
 	if (hostp != NULL)
 	  addr = hostp->h_name;
 	else
