name: 'Install build dependencies'
inputs:
  toolchain:
    description: '"emscripten", "pnacl", "asan_testing", "coverage", "clang-format" or "eslint"'
    required: true
timeout-minutes: 10
runs:
  using: 'composite'
  steps:
  # Update the Apt cache, since the default state in Github Actions VM might be
  # stalled, causing 404 errors when trying to install packages later.
  - name: Apt update
    shell: bash
    env:
      DEBIAN_FRONTEND: noninteractive
    run: |
      export DISTRIB_CODENAME=$(. /etc/lsb-release && echo $DISTRIB_CODENAME)
      wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
      sudo add-apt-repository "deb http://apt.llvm.org/${DISTRIB_CODENAME}/ llvm-toolchain-${DISTRIB_CODENAME}-${LLVM_VERSION} main"
      sudo apt-get update

  - name: Install build dependencies
    if: ${{ inputs.toolchain != 'clang-format' && inputs.toolchain != 'eslint' }}
    shell: bash
    env:
      DEBIAN_FRONTEND: noninteractive
    run: >
      sudo apt-get install -y
      autoconf
      autoconf-archive
      flex
      libsystemd-dev
      libudev-dev
      pkg-config

  - name: Install build dependencies
    if: ${{ inputs.toolchain == 'clang-format' }}
    shell: bash
    env:
      DEBIAN_FRONTEND: noninteractive
    run: |
      sudo apt-get install -y clang-format-${LLVM_VERSION}

  - name: Set up Python 3
    uses: actions/setup-python@v4
    with:
      python-version: 3.9

  - name: Initialize env
    shell: bash
    run: env/initialize.sh -t ${{ inputs.toolchain }}

  # Building in the analysis modes requires LLVM/Clang, as well as 32-bit
  # cross-compile versions of standard C and C++ libraries (needed as we're
  # building code in 32-bit mode on the 64-bit host).
  - name: Install LLVM toolchain
    if: ${{ inputs.toolchain == 'asan_testing' || inputs.toolchain == 'coverage' }}
    shell: bash
    env:
      DEBIAN_FRONTEND: noninteractive
    run: >
      sudo apt-get install -y
      build-essential
      llvm-${LLVM_VERSION}
      clang-${LLVM_VERSION}
      libc6-dev-i386
      libstdc++-${ANALYSIS_LIBSTDCPP_VERSION}-dev-i386-cross
